<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>算法笔记-第四章-算法初步-part1</title>
      <link href="/2019/07/25/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E7%AE%97%E6%B3%95%E5%88%9D%E6%AD%A5-part1/"/>
      <url>/2019/07/25/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E7%AE%97%E6%B3%95%E5%88%9D%E6%AD%A5-part1/</url>
      
        <content type="html"><![CDATA[<h2 id="算法笔记-第四章-算法初步-Part-1-x"><a href="#算法笔记-第四章-算法初步-Part-1-x" class="headerlink" title="算法笔记  第四章   算法初步  (Part 1\x)"></a>算法笔记  第四章   算法初步  (Part 1\x)</h2><p>本章涉及的内容有： </p><ul><li><p>排序 ✔</p><pre><code>- 选择排序 ✔- 插入排序 ✔- 排序题与sort函数的应用 ✔</code></pre></li><li><p>散列</p></li><li><p>递归</p></li><li><p>贪心</p></li><li><p>二分</p></li><li><p>Two Pointers</p></li><li><p>其他高效技巧与算法</p><p><strong>注：由于这本书的大部分例题都会以PAT呈现，所以我还会附上柳婼的解答，因为她的解答会更清爽一些！也很好理解！并且课本的代码会按自己喜好改动，并非完全一致</strong></p></li></ul>  <a id="more"></a><h1 id="排序4-1"><a href="#排序4-1" class="headerlink" title="排序4.1"></a>排序4.1</h1><blockquote><p><strong>选择排序4.1.1</strong></p></blockquote><p>每次从<strong>[i,n</strong>]中选出<strong>最小</strong>的值，与<strong>A[i]交换</strong>（先看算法逻辑【在下面】再看图）</p><p> <img src="/2019/07/25/算法笔记-第四章-算法初步-part1/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E7%AE%97%E6%B3%95%E5%88%9D%E6%AD%A5-part1-x%5C1.jpg" alt="1"></p><p>​    </p><p>​    <strong>算法逻辑</strong>：总共需要进行<strong>n趟</strong>（1≤i≤n）操作，每趟操作选出未排序部分<strong>[i,n]</strong>中<strong>最小</strong>的元素，令其与<strong>A[i]</strong>进行<strong>交换</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实现代码如下 </span></span><br><span class="line">注意：下标从<span class="number">1</span>~n</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectSort</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; j++)<span class="comment">//进行n趟操作</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> k = i; <span class="comment">//每趟操作都先假设未排序的第一个元素为最小的</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &lt;= n; j++) <span class="comment">//选出[i,n]中最小的元素，其下标为k</span></span><br><span class="line">            <span class="keyword">if</span>(A[j] &lt;A[k]) k = j;</span><br><span class="line">        <span class="comment">//👆找了一轮内最小的元素</span></span><br><span class="line">        <span class="comment">//👇交换</span></span><br><span class="line">        <span class="keyword">int</span> temp = A[i];</span><br><span class="line">        A[i] = A[k];</span><br><span class="line">        A[k] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>插入排序4.1.2</strong></p></blockquote><p>序列B的下标依旧是从<strong>1~n</strong> ，每次取出未排序部分的第一个元素，比较后插入有序序列（先看算法逻辑再看图）</p><p><img src="/2019/07/25/算法笔记-第四章-算法初步-part1/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E7%AE%97%E6%B3%95%E5%88%9D%E6%AD%A5-part1-x%5C2.jpg" alt="2"></p><p><strong>算法逻辑</strong>：总共需要进行<strong>n-1</strong>趟操作，因为一开始我们可以把待排序序列的第一个元素当作有序序列的第一个元素，这样一来，循环就可以从<strong>i = 2</strong>开始遍历到<strong>i = n</strong> ；每遍历一个元素，便先将元素暂时存储到<strong>temp</strong>中，再而从该元素的当前位置<strong>B[ j ]</strong>(该元素位置前的所有元素是已经排序好的有序序列）开始往前（<strong>j–</strong>）逐一比较，如果被比较的元素<strong>较大</strong>，则被比较的元素<strong>往后挪一位</strong>，当遇到比temp小的元素或者temp已经和所有的有序序列元素比较完毕后，跳出循环，此时的有序序列中所有比temp大的元素都被向后挪了一位，将<strong>temp插入</strong>当前<strong>B[ j ]</strong>的位置就可以完成此次temp的排序。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//课本代码</span></span><br><span class="line"><span class="keyword">int</span> B[maxn],n;<span class="comment">//n为元素个数，数组下标为1~n</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertSort</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> temp = B[i], j = i;<span class="comment">//temp临时存放B[i]， j从i开始往前枚举比较</span></span><br><span class="line">        <span class="keyword">while</span>(j &gt; <span class="number">1</span> &amp;&amp; B[j - <span class="number">1</span>] &gt; temp)<span class="comment">//只要不比完或前一个元素比temp大 循环就继续</span></span><br><span class="line">        &#123;</span><br><span class="line">            B[j] = B[j - <span class="number">1</span>]; <span class="comment">//比temp大的元素往后挪一位</span></span><br><span class="line">            j--；</span><br><span class="line">        &#125;</span><br><span class="line">        B[j] = temp; <span class="comment">//插入temp</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>排序题与sort函数的应用</strong></p></blockquote><p>​        在实际的PTA考试里是不需要我们手打排序算法的 = =，只需要使用C++的sort函数对序列进行排序，而且使用它大概率<strong>比你手写</strong>的排序算法<strong>快</strong>hahah。（sort的简单使用方法看看下面的例子就差不多会了！）</p><p><strong>例1：初见sort函数</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>] = &#123;<span class="number">5</span>,<span class="number">7</span>,<span class="number">2</span>&#125;;</span><br><span class="line">sort(a,a+<span class="number">3</span>);<span class="comment">//a[0] ~ a[2] 从小到大排序</span></span><br></pre></td></tr></table></figure><p><strong>sort(首元素地址，尾元素的下一个地址，cmp函数)</strong>  其中cmp函数若不填则是从小到大排序</p><p><strong>例2：字符串的字典序</strong></p><p>①分数高的排前面</p><p>②分数相同名字字典序小的排前面</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span> <span class="params">(Student a, Student b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.score != b.score) <span class="keyword">return</span> a.score &gt; b.score; <span class="comment">//分数不同则高的在前</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">strcmp</span> (a.name,b.name) &lt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>strcmp() ?!</strong></p><ul><li>利用char数组存储的字符串可以利用strcmp()函数进行比较字典序大小</li><li>若strcmp(str1,str2)<ul><li><strong>str1</strong>字典序<strong>小于str2</strong>时，返回一个<strong>负数</strong></li><li><strong>str1</strong>字典序<strong>大于str2</strong>时，返回一个<strong>正数</strong></li><li><strong>str1</strong>字典序<strong>等于str2</strong>时，返回<strong>零</strong></li></ul></li></ul><p>所以例2中strcmp(a.name,b.name) &lt;0 代表在分数相等的情况下，当a的字典序小于b的时将return true，即按字典序从小到大排列。</p><p><strong>例3：分数相同，排名相同</strong></p><p>①（记录排名再输出）</p><p>实现逻辑：先令数组的<strong>第一个个体</strong>（index = 0）<strong>排名为1</strong>，然后从第二个个体开始遍历所有的个体，如果当前个体和上一个个体<strong>分数相同</strong>，则该个体的排名也等于上一个个体的排名，如果<strong>分数不相同</strong>，则当前个体的排名等于当前的下标<strong>index + 1</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">stu[<span class="number">0</span>].r = <span class="number">1</span>;<span class="comment">//第一个元素排名为1</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n ;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(stu[i].score == stu[i<span class="number">-1</span>].score) stu[i].r = stu[i - <span class="number">1</span>].r;</span><br><span class="line">    <span class="keyword">else</span> stu[i].r = i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>②(直接输出排名)</p><p>实现逻辑：和上面差不多啦<del>~</del></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> r = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>( i &gt; <span class="number">0</span> &amp;&amp; stu[i].score != stu[i - <span class="number">1</span>].score) r = i + <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>做个题：</p><blockquote><h2 id="【PAT-A1025】PAT-ranking"><a href="#【PAT-A1025】PAT-ranking" class="headerlink" title="【PAT A1025】PAT ranking"></a>【PAT A1025】PAT ranking</h2></blockquote><p>Programming Ability Test (PAT) is organized by the College of Computer Science and Technology of Zhejiang University. Each test is supposed to run simultaneously in several places, and the ranklists will be merged immediately after the test. Now it is your job to write a program to correctly merge all the ranklists and generate the final rank.</p><p><strong>Input Specification:</strong></p><p>Each input file contains one test case. For each case, the first line contains a positive number <em>N</em> (≤100), the number of test locations. Then <em>N</em>ranklists follow, each starts with a line containing a positive integer <em>K</em> (≤300), the number of testees, and then <em>K</em> lines containing the registration number (a 13-digit number) and the total score of each testee. All the numbers in a line are separated by a space.</p><p> <strong>Output Specification:</strong></p><p>For each test case, first print in one line the total number of testees. Then print the final ranklist in the following format:</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">registration_number</span> final_rank location_number local_rank</span><br></pre></td></tr></table></figure><p>The locations are numbered from 1 to <em>N</em>. The output must be sorted in nondecreasing order of the final ranks. The testees with the same score must have the same rank, and the output must be sorted in nondecreasing order of their registration numbers.</p><p><strong>Sample Input:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">5</span><br><span class="line">1234567890001 95</span><br><span class="line">1234567890005 100</span><br><span class="line">1234567890003 95</span><br><span class="line">1234567890002 77</span><br><span class="line">1234567890004 85</span><br><span class="line">4</span><br><span class="line">1234567890013 65</span><br><span class="line">1234567890011 25</span><br><span class="line">1234567890014 100</span><br><span class="line">1234567890012 85</span><br></pre></td></tr></table></figure><p><strong>Sample Output:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">9</span><br><span class="line">1234567890005 1 1 1</span><br><span class="line">1234567890014 1 2 1</span><br><span class="line">1234567890001 3 1 2</span><br><span class="line">1234567890003 3 1 2</span><br><span class="line">1234567890004 5 1 4</span><br><span class="line">1234567890012 5 2 2</span><br><span class="line">1234567890002 7 1 5</span><br><span class="line">1234567890013 8 2 3</span><br><span class="line">1234567890011 9 2 4</span><br></pre></td></tr></table></figure><p><strong>题目大意：</strong> 有n个PAT考场，每个考场k人，给你每个人准考证号 ，让你按考生的分数从高到低排序，并按顺序输出所有考生的准考证号，排名，考场号，考场排名</p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 算法笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法笔记第三章 入门模拟 2/2</title>
      <link href="/2019/07/25/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%85%A5%E9%97%A8%E6%A8%A1%E6%8B%9F-part2-2/"/>
      <url>/2019/07/25/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%85%A5%E9%97%A8%E6%A8%A1%E6%8B%9F-part2-2/</url>
      
        <content type="html"><![CDATA[<h2 id="算法笔记-第三章-入门模拟-Part-2-2"><a href="#算法笔记-第三章-入门模拟-Part-2-2" class="headerlink" title="算法笔记  第三章   入门模拟  (Part 2\2)"></a>算法笔记  第三章   入门模拟  (Part 2\2)</h2><p>本章涉及的内容有： </p><ul><li><p>简单模拟 </p></li><li><p>查找元素 </p></li><li><p>图形输出 </p></li><li><p>日期处理 </p></li><li><p>进制转换 （重要）✔</p></li><li><p>字符串处理 （重要）✔</p><p><strong>注：由于这本书的大部分例题都会以PAT呈现，所以我还会附上柳婼的解答，因为她的解答会更清爽一些！也很好理解！并且课本的代码会按自己喜好改动，并非完全一致</strong></p><a id="more"></a></li></ul><hr><h1 id="进制转换-3-5-（重要）"><a href="#进制转换-3-5-（重要）" class="headerlink" title="进制转换 3.5 （重要）"></a>进制转换 3.5 （重要）</h1><p>✨<strong>思路</strong> ：由P进制数转化为Q进制数只需要2步</p><p>①将P进制数转化为十进制数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">假设一个P进制数为 a1a2·····an <span class="comment">//n为下标</span></span><br><span class="line">则其对应的十进制数为 y = an * P^<span class="number">0</span> + a(n<span class="number">-1</span>) * P^<span class="number">1</span> + ····· + a1 * P^(n<span class="number">-1</span>) </span><br><span class="line">     举个例子 (<span class="number">8</span> 进制数的) <span class="number">321</span> == (十进制的) <span class="number">3</span>*<span class="number">8</span>^<span class="number">2</span> + <span class="number">2</span>*<span class="number">8</span>^<span class="number">1</span> + <span class="number">1</span>*<span class="number">8</span>^<span class="number">0</span> = <span class="number">209</span> </span><br><span class="line"><span class="comment">//下面是代码</span></span><br><span class="line">    <span class="keyword">int</span> y = <span class="number">0</span>,product = <span class="number">1</span>; <span class="comment">//初始化 这里的product其实是P的零次</span></span><br><span class="line"><span class="keyword">while</span>(x != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        y = y + ( x % <span class="number">10</span> ) * product; <span class="comment">//x%10获得x的最后一位数，再把它乘上对应的Product</span></span><br><span class="line">        x = x / <span class="number">10</span>; <span class="comment">//获取x的最后一位之后将其删掉</span></span><br><span class="line">        product = product * P; <span class="comment">// 幂加一 也就是再乘一个P</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>②将其十进制数转化为Q进制数</p><p>采用<strong>除基取余法</strong>，以课本为例，体会一下就可以知道了。（基就是进制<strong>Q</strong>）</p><blockquote><p>将11（这是一个十进制数）转为为2进制数</p><p>11 除以 2，得<strong>商</strong>为 <strong>5</strong>，<strong>余数</strong>为 <strong>1</strong>；</p><p>5 除以 2，得<strong>商</strong>为 <strong>2</strong>，<strong>余数</strong>为 <strong>1</strong>；</p><p>2 除以 2 ，得<strong>商</strong>为 <strong>1</strong>，<strong>余数</strong>为 0；</p><p>1 除以 2 ，得<strong>商</strong>为<strong>0</strong>，<strong>余数</strong>为1；</p><p><strong>商为0时</strong>，动作结束，<strong>逆向输出</strong>获得的所有余数</p><p>即转化成的二进制数为<strong>1011</strong></p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下面是代码</span></span><br><span class="line"><span class="keyword">int</span> z[<span class="number">40</span>],num = <span class="number">0</span>; <span class="comment">//用数组z来获得每一步除法得到的余数，并用num记录下标，当循环结束时，num是z的元素个数</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    z[num++] = y % Q; <span class="comment">//获得每一步的余数 即除基取余</span></span><br><span class="line">    y = y / Q;</span><br><span class="line">&#125;<span class="keyword">while</span>(y!=<span class="number">0</span>);</span><br><span class="line">注意这里一定要用<span class="keyword">do</span>循环，为了避免输入为<span class="number">0</span>时用<span class="keyword">while</span>是一次循环都不能进去的</span><br><span class="line">当<span class="keyword">do</span>时，即使是<span class="number">0</span>也可以得到输出为<span class="number">0</span>的结果</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>【PTA B1022】 D进制的A+B</strong></p></blockquote><p>输入两个非负 10 进制整数 <em>A</em> 和 <em>B</em> (≤230−1)，输出 <em>A</em>+<em>B</em> 的 <em>D</em> (1&lt;<em>D</em>≤10)进制数。</p><p> <strong>输入格式</strong>：</p><p>输入在一行中依次给出 3 个整数 <em>A</em>、<em>B</em> 和 <em>D</em>。</p><p><strong>输出格式</strong>：</p><p>输出 <em>A</em>+<em>B</em> 的 <em>D</em> 进制数。</p><p><strong>输入样例</strong>：</p><p>123 456 8</p><p><strong>输出样例</strong>：</p><p>1103</p><blockquote><p><strong>😱分析</strong>：emmmm就把他们加起来再进制转换嘛…</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//课本代码</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, d;<span class="comment">//a和b是俩操作数 d是进制</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;d);</span><br><span class="line">    <span class="keyword">int</span> sum = a + b;</span><br><span class="line">    <span class="keyword">int</span> ans[<span class="number">31</span>], num = <span class="number">0</span>;<span class="comment">//ans存放每一位余数，用num记录下标，当循环结束时，num是z的元素个数</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        ans[sum++] = sum % d;</span><br><span class="line">        sum /= d</span><br><span class="line">    &#125;<span class="keyword">while</span>(sum != <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = num - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans[i]); <span class="comment">//倒序输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>🥗</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//柳婼</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, d;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b &gt;&gt; d;</span><br><span class="line">    <span class="keyword">int</span> t = a + b;</span><br><span class="line">    <span class="keyword">if</span>(t == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> s[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(t != <span class="number">0</span>)&#123;</span><br><span class="line">        s[i++] = t % d;</span><br><span class="line">        t /= d;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>;j--)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; s[j];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="字符串处理-3-6（重要）"><a href="#字符串处理-3-6（重要）" class="headerlink" title="字符串处理 3.6（重要）"></a>字符串处理 3.6（重要）</h1><p>✨<strong>思路</strong>：分析清楚题目的输入和输出<strong>格式</strong>，还要考虑到<strong>细节和边界</strong>。</p><p>🎈<strong>注意</strong>：①<strong>scanf</strong>除了使用<strong>%c</strong>读入以外，使用其他格式符<strong>读入</strong>（如%s）的时候都是以<strong>空白符</strong>（空格，换行）作为<strong>读入结束</strong>判断标志</p><p>②使用<strong>char数组</strong>表示字符串的时候，数组<strong>末尾</strong>一定要有<strong>结束符 \0</strong> ，否则<strong>printf</strong>和<strong>puts</strong>输出字符串的时候将<strong>无法识别正确</strong>，<strong>我们一般使用scanf的%s读入或者使用gets函数读入后，会自动在char数组末尾添加结束符\0</strong> ，并不需要手动添加结束符\0（但是在一定要使用其他函数（如<strong>getchar</strong>）读入字符串的时候，<strong>要手动在char数组末尾添加结束符\0</strong>）</p><hr><blockquote><p>​                                            <strong>【codeup 5901】回文串</strong></p></blockquote><p>题目描述</p><p>读入一串字符，判断是否是回文串。“回文串”是一个正读和反读都一样的字符串，比如“level”或者“noon”等等就是回文串。</p><p> <strong>输入</strong></p><p>一行字符串，长度不超过255。</p><p> <strong>输出</strong></p><p>如果是回文串，输出“YES”，否则输出“NO”。</p><p> <strong>样例输入</strong></p><p>12321</p><p><strong>样例输出</strong></p><p>YES</p><blockquote><p><strong>👜分析</strong>：先看个图</p></blockquote><blockquote><p><img src="/2019/07/25/算法笔记-第三章-入门模拟-part2-2/1.jpg" alt="耶耶耶~"></p><p>从图中不难看出来元素个数是奇数或偶数都可以用同样的办法处理，即比较<strong>char数组</strong>中的<strong>下标</strong>第<strong>i</strong>个和第<strong>len-i-1</strong>是否相同就可以判断是否为回文串。</p><p>​        在实际<strong>遍历</strong>操作时只需用遍历字符串中间位置的<strong>前一半</strong>就可以了，即只需要取到 <strong>i == len / 2</strong> 的前一半的<strong>下标</strong>，进行比较就可以。 </p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//课本代码</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">256</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">char</span> str[])</span> <span class="comment">//判断是否为回文串</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(str); <span class="comment">//字符串长度</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len / <span class="number">2</span>; i++)<span class="comment">//遍历字符串i == len / 2的前一半的下标</span></span><br><span class="line">        <span class="keyword">if</span>(str[i] != str[len - i - <span class="number">1</span>]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">//当对称部分都相同时 或者 输入为一个字符的时候 返回true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span> </span>&#123; <span class="comment">//这里改为黑框直接运行的代码</span></span><br><span class="line">    <span class="keyword">char</span> str[maxn];</span><br><span class="line">    gets(str); <span class="comment">//输入字符串</span></span><br><span class="line">    <span class="comment">//👆输入</span></span><br><span class="line">    <span class="comment">//👇输出</span></span><br><span class="line">    <span class="keyword">if</span>(judge(str)) <span class="built_in">printf</span>(<span class="string">"YES\n"</span>); <span class="comment">//str是回文串</span></span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"NO\n"</span>); <span class="comment">//不是回文串</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p><strong>【PAT B1009】 说反话</strong></p></blockquote><p>给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。</p><p> <strong>输入格式</strong>：</p><p>测试输入包含一个测试用例，在一行内给出总长度不超过 80 的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用 1 个空格分开，输入保证句子末尾没有多余的空格。</p><p> <strong>输出格式</strong>：</p><p>每个测试用例的输出占一行，输出倒序后的句子。</p><p> <strong>输入样例</strong>：</p><p>Hello World Here I Come</p><p> <strong>输出样例</strong>：</p><p>Come I Here World Hello</p><blockquote><p><strong>🚎分析</strong>： 用<strong>char一维数组</strong>储存字符串，用<strong>gets</strong>读入一行的全部字符（gets会自动在char数组末尾添加\0），</p><p>再建立<strong>char二维数组</strong>储存每一个单词。之后再逆向输出即可</p><p>实现细节：遍历所有char一位数组里的所有字符，<strong>逐个读入</strong>二维数组中，若<strong>遇到空格</strong> ，就<strong>加上</strong>结束符<strong>\0</strong>，</p><p><strong>注意</strong>：遍历一位数组的范围应该从<strong>下标</strong> <strong>0</strong>开始到<strong>len</strong>（这是为了读入char一维数组里的最后一个结束符）而<strong>不是len-1</strong>，原题代码只遍历到len-1，所以在输入一些样例的时候会有<strong>乱码</strong>出现。（你可以输入1 2 3试试）</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="comment">//PTA提交的时候需要把上面的头文件删除 编译器选择C 再把头文件改为#include&lt;stdio.h&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">90</span>]; <span class="comment">//一维数组存放一整行字符串</span></span><br><span class="line">    gets(str);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(str), r = <span class="number">0</span>, h = <span class="number">0</span>; <span class="comment">//r为行 h为列</span></span><br><span class="line">    <span class="keyword">char</span> ans[<span class="number">90</span>][<span class="number">90</span>]; <span class="comment">//二维数组 存放每一个单词</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= len ; i++) <span class="comment">//这是里从0到len哦！</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(str[i] != <span class="string">' '</span>) ans[r][h++] = str[i]; <span class="comment">//</span></span><br><span class="line">    <span class="keyword">else</span> <span class="comment">//如果是空格，说明一个单词结束，单词末尾添加结束符，再让r+1读取下一个字母并h重置为0</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans[r][h] = <span class="string">'\0'</span>;</span><br><span class="line">            r++;</span><br><span class="line">            h = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = r ;i &gt;= <span class="number">0</span>; i--) </span><br><span class="line">    <span class="comment">//最后一个单词的结束符输入是由if语句完成的而不是else 所以这里r == 总单词数 -1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s"</span>,ans[i]);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>🚄</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//柳婼</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="built_in">string</span>&gt; v;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; s) v.push(s);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; v.top();</span><br><span class="line">    v.pop();</span><br><span class="line">    <span class="keyword">while</span>(!v.empty())&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt; <span class="string">" "</span> &lt;&lt; v.top();</span><br><span class="line">        v.pop();</span><br><span class="line">    &#125;<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>👾C++真方便 落泪</p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 算法笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法笔记第三章 入门模拟 1/2</title>
      <link href="/2019/07/24/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%85%A5%E9%97%A8%E6%A8%A1%E6%8B%9F-part1-2/"/>
      <url>/2019/07/24/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%85%A5%E9%97%A8%E6%A8%A1%E6%8B%9F-part1-2/</url>
      
        <content type="html"><![CDATA[<h2 id="算法笔记-第三章-入门模拟-Part-1-2"><a href="#算法笔记-第三章-入门模拟-Part-1-2" class="headerlink" title="算法笔记  第三章   入门模拟  (Part 1\2)"></a>算法笔记  第三章   入门模拟  (Part 1\2)</h2><p>本章涉及的内容有： </p><ul><li><p>简单模拟 ✔</p></li><li><p>查找元素 ✔</p></li><li><p>图形输出 ✔</p></li><li><p>日期处理 ✔</p></li><li><p>进制转换 （重要）</p></li><li><p>字符串处理 （重要）</p><p><strong>注：由于这本书的大部分例题都会以PAT呈现，所以我还会附上柳婼的解答，因为她的解答会更清爽一些！也很好理解！并且课本的代码会按自己喜好改动，并非完全一致</strong></p><a id="more"></a></li></ul><h1 id="简单模拟-3-1"><a href="#简单模拟-3-1" class="headerlink" title="简单模拟 3.1"></a>简单模拟 3.1</h1><p><strong>思路</strong> ：模拟题干就可👍</p><hr><h3 id><a href="#" class="headerlink" title=" "></a> </h3><blockquote><p>​                                   【 PAT（basic）1001 】害死人不偿命的（3n+1）猜想</p></blockquote><p>卡拉兹(Callatz)猜想：</p><p>对任何一个正整数 <em>n</em>，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3<em>n</em>+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 <em>n</em>=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3<em>n</em>+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……</p><p>我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 <em>n</em>，简单地数一下，需要多少步（砍几下）才能得到 <em>n</em>=1？</p><p><strong>输入格式：</strong></p><p>每个测试输入包含 1 个测试用例，即给出正整数 <em>n</em> 的值。</p><p><strong>输出格式：</strong></p><p>输出从 <em>n</em> 计算到 1 需要的步数。</p><p><strong>输入样例</strong></p><p>3</p><p> <strong>输出样例</strong></p><p>5</p><hr><p><strong>分析</strong>：当<strong>n</strong>不为<strong>1</strong>时，<strong>n</strong>为奇数就将<strong>n</strong>乘以<strong>3n+1</strong>，是偶数就将<strong>n</strong>除以2；</p><p>每进行一次计算就令<strong>step</strong>加<strong>1</strong>；</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//课本代码</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, step = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n); <span class="comment">//输入题目所给的n</span></span><br><span class="line">    <span class="keyword">while</span>(n != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n % <span class="number">2</span> == <span class="number">0</span>) n = n / <span class="number">2</span>; <span class="comment">//n为偶数时</span></span><br><span class="line">        <span class="keyword">else</span> n = (<span class="number">3</span> * n + <span class="number">1</span>) / <span class="number">2</span>; <span class="comment">//n为奇数时</span></span><br><span class="line">        step++; <span class="comment">//计数器加一</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,step);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>嘿嘿嘿留个小空行🤗</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//柳婼</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, count = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span>(n != <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n % <span class="number">2</span> != <span class="number">0</span>) n = n * <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">        n = n / <span class="number">2</span>;</span><br><span class="line">        count ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><blockquote><p>​                                              【 PAT（basic）1032 】挖掘机技术哪家强</p></blockquote><p>为了用事实说明挖掘机技术到底哪家强，PAT 组织了一场挖掘机技能大赛。现请你根据比赛结果统计出技术最强的那个学校。</p><p><strong>输入格式：</strong></p><p>输入在第 1 行给出不超过 105 的正整数 <em>N</em>，即参赛人数。随后 <em>N</em> 行，每行给出一位参赛者的信息和成绩，包括其所代表的学校的编号（从 1 开始连续编号）、及其比赛成绩（百分制），中间以空格分隔。</p><p> <strong>输出格式：</strong></p><p>在一行中给出总得分最高的学校的编号、及其总分，中间以空格分隔。题目保证答案唯一，没有并列。</p><p> <strong>输入样例</strong></p><p>6<br>3 65<br>2 80<br>1 100<br>2 70<br>3 40<br>3 0</p><p> <strong>输出样例</strong></p><p>2 150</p><hr><p><strong>分析</strong>：利用一维数组<strong>school[100010]</strong>记录下每个学校的总分，题干所给的编号可以直接当作<strong>school</strong>数组的下标，记录完毕后利用<strong>for</strong>循环从第一个开始寻找<strong>school</strong>中<strong>最大的元素</strong>以及所<strong>对应的下标</strong> </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//课本代码</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> school [maxn] = &#123;<span class="number">0</span>&#125;; <span class="comment">//将数组内的元素全部初始化为0</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, schID, score;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n); <span class="comment">//n为学校总数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;schID,&amp;score);<span class="comment">//读入学校ID 对应分数</span></span><br><span class="line">        school[schID] += score; <span class="comment">//学校schID的总分加score</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//👆读入完毕</span></span><br><span class="line">    <span class="comment">//👇进行查找</span></span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">1</span>, MAX = <span class="number">-1</span>; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(school[i] &gt; MAX)<span class="comment">//若有元素school[i]大于之前的MAX</span></span><br><span class="line">        &#123;</span><br><span class="line">            MAX = school[i];<span class="comment">//将MAX赋予新的值</span></span><br><span class="line">            k = i;<span class="comment">//记录最大元素的下标</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, k, MAX);<span class="comment">//按格式输出最高总分的学校序号和对应分数 </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>🎑</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//柳婼</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a(N + <span class="number">1</span>); <span class="comment">//创建元素个数为N+1，元素类型为int的动态数组a；</span></span><br><span class="line">    <span class="keyword">int</span> num, score;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num &gt;&gt; score;</span><br><span class="line">        a[num] += score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//👆读入完毕</span></span><br><span class="line">    <span class="comment">//👇进行查找</span></span><br><span class="line">    <span class="keyword">int</span> max = a[<span class="number">1</span>], t = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i&lt;= N; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(max &lt; a[i])&#123;<span class="comment">//若有元素school[i]大于之前的MAX</span></span><br><span class="line">            max = a[i];<span class="comment">//将MAX赋予新的值</span></span><br><span class="line">            t = i;<span class="comment">//记录最大元素的下标</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; t &lt;&lt; <span class="string">" "</span> &lt;&lt; max;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>提示：用<strong>cout</strong>和<strong>cin</strong>进行大量数据读入和输出的时候不是明智的选择，如果超时应该选择用scanf和printf进行读入和输出，还有如果使用C++里的<strong>string</strong>类的话只能用cin和cout进行处理。</em></p><hr><h1 id="查找元素-3-2"><a href="#查找元素-3-2" class="headerlink" title="查找元素 3.2"></a>查找元素 3.2</h1><p><strong>思路</strong> ：此处为简单的查找，直接遍历每一个数据就可以了，之后章节会有更快的查找方式，如二分查找😄</p><p><em>注：由于这本书的大部分例题都会以PAT呈现，所以我还会附上柳婼的解答，因为她的解答会更清爽一些！也很好理解！</em></p><h2 id="【codeup-1935-】找x"><a href="#【codeup-1935-】找x" class="headerlink" title="【codeup 1935 】找x"></a>【codeup 1935 】找x</h2><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>输入一个数n，然后输入n个数值各不相同，再输入一个值x，输出这个值在这个数组中的下标（从0开始，若不在数组中则输出-1）。</p><p> <strong>输入格式：</strong></p><p>测试数据有多组，输入n(1&lt;=n&lt;=200)，接着输入n个数，然后输入x。</p><p> <strong>输出格式：</strong></p><p>对于每组输入,请输出结果。</p><p> <strong>输入样例</strong></p><p>4<br>1 2 3 4<br>3</p><p> <strong>输出样例</strong></p><p>2</p><hr><p><strong>分析</strong>：emmm就直接遍历找嘛…最后如果没有找到的话即 <strong>k == n</strong> 时输出-1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">210</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, x;</span><br><span class="line">    <span class="keyword">while</span>(<span class="string">"%d"</span>, &amp;n) != EOF)<span class="comment">//输入未到文件结尾End of file(因为codeup是多点测试需要这样进行输入)</span></span><br><span class="line">         <span class="comment">//如果是PAT(单点测试)直接scanf读取就可以了 </span></span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]); <span class="comment">//读入n个数</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x); <span class="comment">//读入需要查找的x</span></span><br><span class="line">        <span class="keyword">int</span> k;</span><br><span class="line">        <span class="keyword">for</span>(k = <span class="number">0</span>; k &lt; n; k++) <span class="comment">//遍历</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[k] == x) <span class="comment">//如果找到了值与x相等的元素</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d"</span>,&amp;k); <span class="comment">//输出它的下标</span></span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//退出当前的查找循环</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(k == n) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>); <span class="comment">//k==n时则没有找到输出-1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="图形输出-3-3"><a href="#图形输出-3-3" class="headerlink" title="图形输出 3.3"></a>图形输出 3.3</h1><p><strong>思路</strong> ：①找出图形的规律直接输出。(可以将图形分为多个部分分别输出，这样会简单许多，不建议多重循环一步到位)</p><p>②定义一个二维字符数组，通过规律填充，然后再输出整个二维数组。</p><h2 id="【PAT-B1036】跟奥巴马一起编程"><a href="#【PAT-B1036】跟奥巴马一起编程" class="headerlink" title="【PAT B1036】跟奥巴马一起编程"></a>【PAT B1036】跟奥巴马一起编程</h2><p>美国总统奥巴马不仅呼吁所有人都学习编程，甚至以身作则编写代码，成为美国历史上首位编写计算机代码的总统。2014 年底，为庆祝“计算机科学教育周”正式启动，奥巴马编写了很简单的计算机代码：在屏幕上画一个正方形。现在你也跟他一起画吧！</p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a><strong>输入格式：</strong></h4><p>输入在一行中给出正方形边长 <em>N</em>（3≤<em>N</em>≤20）和组成正方形边的某种字符 C，间隔一个空格。</p><p> <strong>输出格式：</strong></p><p>输出由给定字符 C 画出的正方形。但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，我们输出的行数实际上是列数的 50%（四舍五入取整）。</p><p> <strong>输入样例</strong></p><p>10 a</p><p> <strong>输出样例</strong></p><p>aaaaaaaaaa<br>a________a<br>a________a<br>a________a<br>aaaaaaaaaa<br>（这里的下划线代表空格）</p><hr><p><strong>分析</strong>：把图形分为<strong>顶部，底部，中间</strong>三个部分分别打印，总行数是总列数（N）的一半，当列数为<strong>偶数</strong>时只要让 <strong>N / 2 **就可以得到总的行数，当列数是</strong>奇数<strong>的时候（题目要求四舍五入）只要 **N / 2 + 1</strong> 就可以得到总行数了 ，然后让<strong>总行数减去2</strong>就可以得到中间部分的行数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//课本代码</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> row, col; <span class="comment">//定义行(row)和列(column)  </span></span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %c"</span>,&amp;col,&amp;c);<span class="comment">//读入列数和要打印的字符</span></span><br><span class="line">    <span class="keyword">if</span>(col % <span class="number">2</span> == <span class="number">1</span>) row = col / <span class="number">2</span> + <span class="number">1</span>; <span class="comment">//计算总行数</span></span><br><span class="line">    <span class="keyword">else</span> row = col / <span class="number">2</span>;<span class="comment">//同上</span></span><br><span class="line">    <span class="comment">//👆输入部分</span></span><br><span class="line">    <span class="comment">//👇输出部分</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; col; i++) <span class="built_in">printf</span>(<span class="string">"%c"</span>,c); <span class="comment">//输出第一行</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= row - <span class="number">1</span>; i++) <span class="comment">//输出第二到第row - 1行</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, c); <span class="comment">//输出中间部分的每一行的第一个符号</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; col - <span class="number">2</span>; j++) <span class="built_in">printf</span>(<span class="string">" "</span>);<span class="comment">//输出中间部分每一行的空格</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c\n"</span>, c); <span class="comment">//输出中间部分的每一行的最后一个符号</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; col; i++) <span class="built_in">printf</span>(<span class="string">"%c"</span>,c);<span class="comment">//打印最后一行</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>🐷</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//柳婼</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; c;</span><br><span class="line">    <span class="keyword">int</span> t = N / <span class="number">2</span> + N % <span class="number">2</span>;  <span class="comment">//👍</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; c;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; t - <span class="number">2</span>; i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; c;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span> ; k &lt; N - <span class="number">2</span>; k++)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; c &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N ;i++)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; c;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="日期处理-3-4"><a href="#日期处理-3-4" class="headerlink" title="日期处理 3.4"></a>日期处理 3.4</h1><p><strong>思路</strong> ：不断地令日期增加一天，直到两个日期相等为止。但需要处理的细节比较多，比如大月小月，闰年和非闰年的二月。</p><h2 id="【codeup-1928】-日期差值"><a href="#【codeup-1928】-日期差值" class="headerlink" title="【codeup 1928】 日期差值"></a>【codeup 1928】 日期差值</h2><p> 题目描述</p><p>有两个日期，求两个日期之间的天数，如果两个日期是连续的我们规定他们之间的天数为两天。</p><p> <strong>输入格式：</strong></p><p>有多组数据，每组数据有两行，分别表示两个日期，形式为YYYYMMDD</p><p> <strong>输出格式：</strong></p><p>每组数据输出一行，即日期差值</p><p> <strong>输入样例</strong></p><p>20130101<br>20130105</p><p> <strong>输出样例</strong></p><p>5</p><hr><p><strong>分析</strong>：①让比较小的日期的天数 <strong>d1</strong> 不断 <strong>+1</strong> 直到 *<em>d1 == d2 *</em> </p><p>②设二维int 数组 <strong>month[13] [2]  **储存每一个月份的具体天数，其中</strong>month[x] [1]** 代表闰年时，第x月有多少天，</p><p><strong>month [x] [0]</strong>代表非闰年时，第x月有多少天</p><p>③当 <strong>d</strong> 超过最大天数的时候，<strong>m + 1</strong>，当 <strong>m</strong> 超过最大月份的时候(等于13时)， <strong>y + 1</strong>; </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//课本代码 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> month[<span class="number">13</span>][<span class="number">2</span>] = </span><br><span class="line">&#123;</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">0</span>&#125;,<span class="comment">//0,0只起占位作用  </span></span><br><span class="line">    &#123;<span class="number">31</span>,<span class="number">31</span>&#125;,&#123;<span class="number">28</span>,<span class="number">29</span>&#125;,&#123;<span class="number">31</span>,<span class="number">31</span>&#125;,&#123;<span class="number">30</span>,<span class="number">30</span>&#125;,</span><br><span class="line">    &#123;<span class="number">31</span>,<span class="number">31</span>&#125;,&#123;<span class="number">30</span>,<span class="number">30</span>&#125;,&#123;<span class="number">31</span>,<span class="number">31</span>&#125;,&#123;<span class="number">31</span>,<span class="number">31</span>&#125;,</span><br><span class="line">    &#123;<span class="number">30</span>,<span class="number">30</span>&#125;,&#123;<span class="number">31</span>,<span class="number">31</span>&#125;,&#123;<span class="number">30</span>,<span class="number">30</span>&#125;,&#123;<span class="number">31</span>,<span class="number">31</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isLeap</span><span class="params">(<span class="keyword">int</span> year)</span> <span class="comment">//闰年判断函数 四年一闰,百年不闰,四百年再闰；true 为润 false为平</span></span></span><br><span class="line"><span class="function">    <span class="title">return</span> <span class="params">((year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || year % <span class="number">400</span> == <span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> time1, y1, m1, d1;</span><br><span class="line">    <span class="keyword">int</span> time2, y2, m2, d1;</span><br><span class="line">    <span class="comment">/*codeup为多点测试 我这里改为小黑框可以直接运行的代码 </span></span><br><span class="line"><span class="comment">    while(scanf("%d%d",&amp;time1,&amp;time2) != EOF) </span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">    if (time1 &gt; time2)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">    int temp = time1;</span></span><br><span class="line"><span class="comment">    time1 = time2;</span></span><br><span class="line"><span class="comment">    time2 = temp;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span>  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;time1,&amp;time2); </span><br><span class="line">    <span class="keyword">if</span>(time1 &gt; time2) <span class="comment">//如果time1大于time2进行交换</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> temp = time1;</span><br><span class="line">        time1 = time2;</span><br><span class="line">        time2 = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    y1 = time1 / <span class="number">10000</span>; m1 = time1 % <span class="number">10000</span> / <span class="number">100</span>; d1 = time1 % <span class="number">100</span>; </span><br><span class="line">    y2 = time2 / <span class="number">10000</span>; m2 = time2 % <span class="number">10000</span> / <span class="number">100</span>; d2 = time2 % <span class="number">100</span>; </span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>; <span class="comment">//记录最后的输出结果</span></span><br><span class="line">    <span class="comment">//👆数据输入完成</span></span><br><span class="line">    <span class="comment">//👇进行数据处理</span></span><br><span class="line">    <span class="keyword">while</span>(y1 &lt; y2 || m1 &lt; m2 || d1 &lt; d2)</span><br><span class="line">    &#123;</span><br><span class="line">        d1++; <span class="comment">//天数+1</span></span><br><span class="line">        <span class="keyword">if</span>(d1 == month[m1][isLeap(y1)] + <span class="number">1</span>) <span class="comment">//d1超过当前月份的最大天数</span></span><br><span class="line">        &#123;</span><br><span class="line">            m1++;<span class="comment">//月份加一</span></span><br><span class="line">            d1 = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans++; <span class="comment">//日期差值加一</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 算法笔记 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开篇</title>
      <link href="/2019/07/23/%E5%BC%80-%E7%AF%87/"/>
      <url>/2019/07/23/%E5%BC%80-%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>​        你好！感谢你访问我的Blog！博主创建此博客的目的是为了记录从零（点五）开始学习计算机408考研的历程，距离考试还有大概一年半的时间，大家一起加油吧！耶耶耶~！</p><p>​        （如果需要联系我可以发邮件给我！<a href="mailto:dengdeng-80@163.com" target="_blank" rel="noopener">dengdeng-80@163.com</a>）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
