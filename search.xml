<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>算法笔记第三章 入门模拟 1/2</title>
      <link href="/2019/07/24/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%85%A5%E9%97%A8%E6%A8%A1%E6%8B%9F-part1&amp;2/"/>
      <url>/2019/07/24/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E7%AC%AC%E4%B8%89%E7%AB%A0-%E5%85%A5%E9%97%A8%E6%A8%A1%E6%8B%9F-part1&amp;2/</url>
      
        <content type="html"><![CDATA[<h2 id="算法笔记-第三章-入门模拟-Part-1-2"><a href="#算法笔记-第三章-入门模拟-Part-1-2" class="headerlink" title="算法笔记  第三章   入门模拟  (Part 1\2)"></a>算法笔记  第三章   入门模拟  (Part 1\2)</h2><p>本章涉及的内容有： </p><ul><li><p>简单模拟 ✔</p></li><li><p>查找元素 ✔</p></li><li><p>图形输出 ✔</p></li><li><p>日期处理 ✔</p></li><li><p>进制转换 （重要）</p></li><li><p>字符串处理 （重要）</p><p><strong>注：由于这本书的大部分例题都会以PAT呈现，所以我还会附上柳婼的解答，因为她的解答会更清爽一些！也很好理解！并且课本的代码会按自己喜好改动，并非完全一致</strong></p><a id="more"></a></li></ul><h1 id="简单模拟-3-1"><a href="#简单模拟-3-1" class="headerlink" title="简单模拟 3.1"></a>简单模拟 3.1</h1><p><strong>思路</strong> ：模拟题干就可👍</p><hr><h3 id><a href="#" class="headerlink" title=" "></a> </h3><h2 id="【-PAT（basic）1001-】害死人不偿命的（3n-1）猜想"><a href="#【-PAT（basic）1001-】害死人不偿命的（3n-1）猜想" class="headerlink" title="【 PAT（basic）1001 】害死人不偿命的（3n+1）猜想"></a>【 PAT（basic）1001 】害死人不偿命的（3n+1）猜想</h2><p>卡拉兹(Callatz)猜想：</p><p>对任何一个正整数 <em>n</em>，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3<em>n</em>+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 <em>n</em>=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3<em>n</em>+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……</p><p>我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 <em>n</em>，简单地数一下，需要多少步（砍几下）才能得到 <em>n</em>=1？</p><p><strong>输入格式：</strong></p><p>每个测试输入包含 1 个测试用例，即给出正整数 <em>n</em> 的值。</p><p><strong>输出格式：</strong></p><p>输出从 <em>n</em> 计算到 1 需要的步数。</p><p><strong>输入样例</strong></p><p>3</p><h4 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a><strong>输出样例</strong></h4><p>5</p><hr><p><strong>分析</strong>：当<strong>n</strong>不为<strong>1</strong>时，<strong>n</strong>为奇数就将<strong>n</strong>乘以<strong>3n+1</strong>，是偶数就将<strong>n</strong>除以2；</p><p>每进行一次计算就令<strong>step</strong>加<strong>1</strong>；</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//课本代码</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, step = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n); <span class="comment">//输入题目所给的n</span></span><br><span class="line">    <span class="keyword">while</span>(n != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n % <span class="number">2</span> == <span class="number">0</span>) n = n / <span class="number">2</span>; <span class="comment">//n为偶数时</span></span><br><span class="line">        <span class="keyword">else</span> n = (<span class="number">3</span> * n + <span class="number">1</span>) / <span class="number">2</span>; <span class="comment">//n为奇数时</span></span><br><span class="line">        step++; <span class="comment">//计数器加一</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,step);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>嘿嘿嘿留个小空行🤗</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//柳婼</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, count = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span>(n != <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n % <span class="number">2</span> != <span class="number">0</span>) n = n * <span class="number">3</span> + <span class="number">1</span>;</span><br><span class="line">        n = n / <span class="number">2</span>;</span><br><span class="line">        count ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="【-PAT（basic）1032-】挖掘机技术哪家强"><a href="#【-PAT（basic）1032-】挖掘机技术哪家强" class="headerlink" title="【 PAT（basic）1032 】挖掘机技术哪家强"></a>【 PAT（basic）1032 】挖掘机技术哪家强</h2><p>为了用事实说明挖掘机技术到底哪家强，PAT 组织了一场挖掘机技能大赛。现请你根据比赛结果统计出技术最强的那个学校。</p><p><strong>输入格式：</strong></p><p>输入在第 1 行给出不超过 105 的正整数 <em>N</em>，即参赛人数。随后 <em>N</em> 行，每行给出一位参赛者的信息和成绩，包括其所代表的学校的编号（从 1 开始连续编号）、及其比赛成绩（百分制），中间以空格分隔。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a><strong>输出格式：</strong></h4><p>在一行中给出总得分最高的学校的编号、及其总分，中间以空格分隔。题目保证答案唯一，没有并列。</p><h4 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a><strong>输入样例</strong></h4><p>6<br>3 65<br>2 80<br>1 100<br>2 70<br>3 40<br>3 0</p><h4 id="输出样例-1"><a href="#输出样例-1" class="headerlink" title="输出样例"></a><strong>输出样例</strong></h4><p>2 150</p><hr><p><strong>分析</strong>：利用一维数组<strong>school[100010]</strong>记录下每个学校的总分，题干所给的编号可以直接当作<strong>school</strong>数组的下标，记录完毕后利用<strong>for</strong>循环从第一个开始寻找<strong>school</strong>中<strong>最大的元素</strong>以及所<strong>对应的下标</strong> </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//课本代码</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> school [maxn] = &#123;<span class="number">0</span>&#125;; <span class="comment">//将数组内的元素全部初始化为0</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, schID, score;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n); <span class="comment">//n为学校总数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;schID,&amp;score);<span class="comment">//读入学校ID 对应分数</span></span><br><span class="line">        school[schID] += score; <span class="comment">//学校schID的总分加score</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//👆读入完毕</span></span><br><span class="line">    <span class="comment">//👇进行查找</span></span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">1</span>, MAX = <span class="number">-1</span>; </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(school[i] &gt; MAX)<span class="comment">//若有元素school[i]大于之前的MAX</span></span><br><span class="line">        &#123;</span><br><span class="line">            MAX = school[i];<span class="comment">//将MAX赋予新的值</span></span><br><span class="line">            k = i;<span class="comment">//记录最大元素的下标</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, k, MAX);<span class="comment">//按格式输出最高总分的学校序号和对应分数 </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>🎑</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//柳婼</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a(N + <span class="number">1</span>); <span class="comment">//创建元素个数为N+1，元素类型为int的动态数组a；</span></span><br><span class="line">    <span class="keyword">int</span> num, score;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; num &gt;&gt; score;</span><br><span class="line">        a[num] += score;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//👆读入完毕</span></span><br><span class="line">    <span class="comment">//👇进行查找</span></span><br><span class="line">    <span class="keyword">int</span> max = a[<span class="number">1</span>], t = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i&lt;= N; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(max &lt; a[i])&#123;<span class="comment">//若有元素school[i]大于之前的MAX</span></span><br><span class="line">            max = a[i];<span class="comment">//将MAX赋予新的值</span></span><br><span class="line">            t = i;<span class="comment">//记录最大元素的下标</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; t &lt;&lt; <span class="string">" "</span> &lt;&lt; max;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>提示：用<strong>cout</strong>和<strong>cin</strong>进行大量数据读入和输出的时候不是明智的选择，如果超时应该选择用scanf和printf进行读入和输出，还有如果使用C++里的<strong>string</strong>类的话只能用cin和cout进行处理。</em></p><hr><h1 id="查找元素-3-2"><a href="#查找元素-3-2" class="headerlink" title="查找元素 3.2"></a>查找元素 3.2</h1><p><strong>思路</strong> ：此处为简单的查找，直接遍历每一个数据就可以了，之后章节会有更快的查找方式，如二分查找😄</p><p><em>注：由于这本书的大部分例题都会以PAT呈现，所以我还会附上柳婼的解答，因为她的解答会更清爽一些！也很好理解！</em></p><h2 id="【codeup-1935-】找x"><a href="#【codeup-1935-】找x" class="headerlink" title="【codeup 1935 】找x"></a>【codeup 1935 】找x</h2><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>输入一个数n，然后输入n个数值各不相同，再输入一个值x，输出这个值在这个数组中的下标（从0开始，若不在数组中则输出-1）。</p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a><strong>输入格式：</strong></h4><p>测试数据有多组，输入n(1&lt;=n&lt;=200)，接着输入n个数，然后输入x。</p><h4 id="输出格式：-1"><a href="#输出格式：-1" class="headerlink" title="输出格式："></a><strong>输出格式：</strong></h4><p>对于每组输入,请输出结果。</p><h4 id="输入样例-1"><a href="#输入样例-1" class="headerlink" title="输入样例"></a><strong>输入样例</strong></h4><p>4<br>1 2 3 4<br>3</p><h4 id="输出样例-2"><a href="#输出样例-2" class="headerlink" title="输出样例"></a><strong>输出样例</strong></h4><p>2</p><hr><p><strong>分析</strong>：emmm就直接遍历找嘛…最后如果没有找到的话即 <strong>k == n</strong> 时输出-1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">210</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, x;</span><br><span class="line">    <span class="keyword">while</span>(<span class="string">"%d"</span>, &amp;n) != EOF)<span class="comment">//输入未到文件结尾End of file(因为codeup是多点测试需要这样进行输入)</span></span><br><span class="line">         <span class="comment">//如果是PAT(单点测试)直接scanf读取就可以了 </span></span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]); <span class="comment">//读入n个数</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x); <span class="comment">//读入需要查找的x</span></span><br><span class="line">        <span class="keyword">int</span> k;</span><br><span class="line">        <span class="keyword">for</span>(k = <span class="number">0</span>; k &lt; n; k++) <span class="comment">//遍历</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[k] == x) <span class="comment">//如果找到了值与x相等的元素</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d"</span>,&amp;k); <span class="comment">//输出它的下标</span></span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//退出当前的查找循环</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(k == n) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>); <span class="comment">//k==n时则没有找到输出-1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="图形输出-3-3"><a href="#图形输出-3-3" class="headerlink" title="图形输出 3.3"></a>图形输出 3.3</h1><p><strong>思路</strong> ：①找出图形的规律直接输出。(可以将图形分为多个部分分别输出，这样会简单许多，不建议多重循环一步到位)</p><p>②定义一个二维字符数组，通过规律填充，然后再输出整个二维数组。</p><h2 id="【PAT-B1036】跟奥巴马一起编程"><a href="#【PAT-B1036】跟奥巴马一起编程" class="headerlink" title="【PAT B1036】跟奥巴马一起编程"></a>【PAT B1036】跟奥巴马一起编程</h2><p>美国总统奥巴马不仅呼吁所有人都学习编程，甚至以身作则编写代码，成为美国历史上首位编写计算机代码的总统。2014 年底，为庆祝“计算机科学教育周”正式启动，奥巴马编写了很简单的计算机代码：在屏幕上画一个正方形。现在你也跟他一起画吧！</p><h4 id="输入格式：-1"><a href="#输入格式：-1" class="headerlink" title="输入格式："></a><strong>输入格式：</strong></h4><p>输入在一行中给出正方形边长 <em>N</em>（3≤<em>N</em>≤20）和组成正方形边的某种字符 C，间隔一个空格。</p><h4 id="输出格式：-2"><a href="#输出格式：-2" class="headerlink" title="输出格式："></a><strong>输出格式：</strong></h4><p>输出由给定字符 C 画出的正方形。但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，我们输出的行数实际上是列数的 50%（四舍五入取整）。</p><h4 id="输入样例-2"><a href="#输入样例-2" class="headerlink" title="输入样例"></a><strong>输入样例</strong></h4><p>10 a</p><h4 id="输出样例-3"><a href="#输出样例-3" class="headerlink" title="输出样例"></a><strong>输出样例</strong></h4><p>aaaaaaaaaa<br>a                a<br>a                a<br>a                a<br>aaaaaaaaaa</p><hr><p><strong>分析</strong>：把图形分为<strong>顶部，底部，中间</strong>三个部分分别打印，总行数是总列数（N）的一半，当列数为<strong>偶数</strong>时只要让 <strong>N / 2 **就可以得到总的行数，当列数是</strong>奇数<strong>的时候（题目要求四舍五入）只要 **N / 2 + 1</strong> 就可以得到总行数了 ，然后让<strong>总行数减去2</strong>就可以得到中间部分的行数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//课本代码</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> row, col; <span class="comment">//定义行(row)和列(column)  </span></span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %c"</span>,&amp;col,&amp;c);<span class="comment">//读入列数和要打印的字符</span></span><br><span class="line">    <span class="keyword">if</span>(col % <span class="number">2</span> == <span class="number">1</span>) row = col / <span class="number">2</span> + <span class="number">1</span>; <span class="comment">//计算总行数</span></span><br><span class="line">    <span class="keyword">else</span> row = col / <span class="number">2</span>;<span class="comment">//同上</span></span><br><span class="line">    <span class="comment">//👆输入部分</span></span><br><span class="line">    <span class="comment">//👇输出部分</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; col; i++) <span class="built_in">printf</span>(<span class="string">"%c"</span>,c); <span class="comment">//输出第一行</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= row - <span class="number">1</span>; i++) <span class="comment">//输出第二到第row - 1行</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, c); <span class="comment">//输出中间部分的每一行的第一个符号</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; col - <span class="number">2</span>; j++) <span class="built_in">printf</span>(<span class="string">" "</span>);<span class="comment">//输出中间部分每一行的空格</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c\n"</span>, c); <span class="comment">//输出中间部分的每一行的最后一个符号</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; col; i++) <span class="built_in">printf</span>(<span class="string">"%c"</span>,c);<span class="comment">//打印最后一行</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>🐷</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//柳婼</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; N &gt;&gt; c;</span><br><span class="line">    <span class="keyword">int</span> t = N / <span class="number">2</span> + N % <span class="number">2</span>;  <span class="comment">//👍</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; c;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; t - <span class="number">2</span>; i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; c;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span> ; k &lt; N - <span class="number">2</span>; k++)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; c &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N ;i++)</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; c;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="日期处理-3-4"><a href="#日期处理-3-4" class="headerlink" title="日期处理 3.4"></a>日期处理 3.4</h1><p><strong>思路</strong> ：不断地令日期增加一天，直到两个日期相等为止。但需要处理的细节比较多，比如大月小月，闰年和非闰年的二月。</p><h2 id="【codeup-1928】-日期差值"><a href="#【codeup-1928】-日期差值" class="headerlink" title="【codeup 1928】 日期差值"></a>【codeup 1928】 日期差值</h2><h4 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h4><p>有两个日期，求两个日期之间的天数，如果两个日期是连续的我们规定他们之间的天数为两天。</p><h4 id="输入格式：-2"><a href="#输入格式：-2" class="headerlink" title="输入格式："></a><strong>输入格式：</strong></h4><p>有多组数据，每组数据有两行，分别表示两个日期，形式为YYYYMMDD</p><h4 id="输出格式：-3"><a href="#输出格式：-3" class="headerlink" title="输出格式："></a><strong>输出格式：</strong></h4><p>每组数据输出一行，即日期差值</p><h4 id="输入样例-3"><a href="#输入样例-3" class="headerlink" title="输入样例"></a><strong>输入样例</strong></h4><p>20130101<br>20130105</p><h4 id="输出样例-4"><a href="#输出样例-4" class="headerlink" title="输出样例"></a><strong>输出样例</strong></h4><p>5</p><hr><p><strong>分析</strong>：①让比较小的日期的天数 <strong>d1</strong> 不断 <strong>+1</strong> 直到 *<em>d1 == d2 *</em> </p><p>②设二维int 数组 <strong>month[13] [2]  **储存每一个月份的具体天数，其中</strong>month[x] [1]** 代表闰年时，第x月有多少天，</p><p><strong>month [x] [0]</strong>代表非闰年时，第x月有多少天</p><p>③当 <strong>d</strong> 超过最大天数的时候，<strong>m + 1</strong>，当 <strong>m</strong> 超过最大月份的时候(等于13时)， <strong>y + 1</strong>; </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//课本代码 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> month[<span class="number">13</span>][<span class="number">2</span>] = </span><br><span class="line">&#123;</span><br><span class="line">    &#123;<span class="number">0</span>,<span class="number">0</span>&#125;,<span class="comment">//0,0只起占位作用  </span></span><br><span class="line">    &#123;<span class="number">31</span>,<span class="number">31</span>&#125;,&#123;<span class="number">28</span>,<span class="number">29</span>&#125;,&#123;<span class="number">31</span>,<span class="number">31</span>&#125;,&#123;<span class="number">30</span>,<span class="number">30</span>&#125;,</span><br><span class="line">    &#123;<span class="number">31</span>,<span class="number">31</span>&#125;,&#123;<span class="number">30</span>,<span class="number">30</span>&#125;,&#123;<span class="number">31</span>,<span class="number">31</span>&#125;,&#123;<span class="number">31</span>,<span class="number">31</span>&#125;,</span><br><span class="line">    &#123;<span class="number">30</span>,<span class="number">30</span>&#125;,&#123;<span class="number">31</span>,<span class="number">31</span>&#125;,&#123;<span class="number">30</span>,<span class="number">30</span>&#125;,&#123;<span class="number">31</span>,<span class="number">31</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isLeap</span><span class="params">(<span class="keyword">int</span> year)</span> <span class="comment">//闰年判断函数 四年一闰,百年不闰,四百年再闰；true 为润 false为平</span></span></span><br><span class="line"><span class="function">    <span class="title">return</span> <span class="params">((year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || year % <span class="number">400</span> == <span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> time1, y1, m1, d1;</span><br><span class="line">    <span class="keyword">int</span> time2, y2, m2, d1;</span><br><span class="line">    <span class="comment">/*codeup为多点测试 我这里改为小黑框可以直接运行的代码 </span></span><br><span class="line"><span class="comment">    while(scanf("%d%d",&amp;time1,&amp;time2) != EOF) </span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">    if (time1 &gt; time2)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">    int temp = time1;</span></span><br><span class="line"><span class="comment">    time1 = time2;</span></span><br><span class="line"><span class="comment">    time2 = temp;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span>  </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;time1,&amp;time2); </span><br><span class="line">    <span class="keyword">if</span>(time1 &gt; time2) <span class="comment">//如果time1大于time2进行交换</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> temp = time1;</span><br><span class="line">        time1 = time2;</span><br><span class="line">        time2 = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    y1 = time1 / <span class="number">10000</span>; m1 = time1 % <span class="number">10000</span> / <span class="number">100</span>; d1 = time1 % <span class="number">100</span>; </span><br><span class="line">    y2 = time2 / <span class="number">10000</span>; m2 = time2 % <span class="number">10000</span> / <span class="number">100</span>; d2 = time2 % <span class="number">100</span>; </span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>; <span class="comment">//记录最后的输出结果</span></span><br><span class="line">    <span class="comment">//👆数据输入完成</span></span><br><span class="line">    <span class="comment">//👇进行数据处理</span></span><br><span class="line">    <span class="keyword">while</span>(y1 &lt; y2 || m1 &lt; m2 || d1 &lt; d2)</span><br><span class="line">    &#123;</span><br><span class="line">        d1++; <span class="comment">//天数+1</span></span><br><span class="line">        <span class="keyword">if</span>(d1 == month[m1][isLeap(y1)] + <span class="number">1</span>) <span class="comment">//d1超过当前月份的最大天数</span></span><br><span class="line">        &#123;</span><br><span class="line">            m1++;<span class="comment">//月份加一</span></span><br><span class="line">            d1 = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ans++; <span class="comment">//日期差值加一</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      
        <tags>
            
            <tag> -算法 -算法笔记 -学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开篇</title>
      <link href="/2019/07/23/%E5%BC%80-%E7%AF%87/"/>
      <url>/2019/07/23/%E5%BC%80-%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>​        你好！感谢你访问我的Blog！博主创建此博客的目的是为了记录从零（点五）开始学习计算机408考研的历程，距离考试还有大概一年半的时间，大家一起加油吧！耶耶耶~！</p><p>​        （如果需要联系我可以发邮件给我！<a href="mailto:dengdeng-80@163.com" target="_blank" rel="noopener">dengdeng-80@163.com</a>）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
